.CronRule {
    position: relative;
    border-radius: 4px;
    background: rgba(0,0,0,.1);
    padding: .5em;

    &:not(:last-child) {
        margin-bottom: .5em;
    }
}

.CronRule-selector { margin-bottom: .5em;}

.CronRule-controls { display: flex; }

.CronRule-controls--on {
    flex-wrap: wrap;

    & > div {
        margin-bottom: .5em;
        width: 100%;
    }
}

.CronRule .MultipleSelectGrid-option {
    font-size: 0.8em;
    height:    2em;
    padding: .25em;
    line-height: 1.6em;
}

.CronRule .MultipleSelectGrid-option:first-child:nth-last-child(n+8),
.CronRule .MultipleSelectGrid-option:first-child:nth-last-child(n+8)~.MultipleSelectGrid-option {
    min-width: 3.1rem;
}

.CronRule .MultipleSelectGrid-option:first-child:nth-last-child(n+13),
.CronRule .MultipleSelectGrid-option:first-child:nth-last-child(n+13)~.MultipleSelectGrid-option {
    min-width: 1.56rem;
}

.CronRule-controlWrapper {

    /* sets number control and setting side by side */
    @nest .CronRule-is-every & {
        display: flex;
    }
}

/* $fix - this might want to be global */
.CronRule-removeButton.Button {
    min-height: 2.5em;
    min-width:  2.5em;
    padding: 0;
    text-align: center;
    background: none;
    box-shadow: none;
    color: #666;

    &:before { border-color: #666; }

    &:hover:before { border-color: #E0003A; }

    & svg {
        margin: 0;
        margin-bottom: .1em;
    }
    /* removes text element */
    & span { display: none; }
}

.CronRule-controls--every { margin-bottom: .5em; }

.CronRule-controls--every .CronRule-control + .CronRule-control { margin-left: .5em;}

.CronRule-control.NumberInput {
    max-width: 12em;
}

.CronRule-control {
    margin-bottom: .5rem;

    @nest .CronRule-every & {
        margin-right: .5rem;
    }
}
