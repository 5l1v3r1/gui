export class ModelEventName {
    public static AccountCategory = new ModelEventName('AccountCategory');
    public static AccountSystem = new ModelEventName('AccountSystem');
    public static Alert = new ModelEventName('Alert');
    public static AlertFilter = new ModelEventName('AlertFilter');
    public static AlertSettings = new ModelEventName('AlertSettings');
    public static AmazonS3Credentials = new ModelEventName('AmazonS3Credentials');
    public static BootEnvironment = new ModelEventName('BootEnvironment');
    public static Calendar = new ModelEventName('Calendar');
    public static CalendarTask = new ModelEventName('CalendarTask');
    public static CryptoCertificate = new ModelEventName('CryptoCertificate');
    public static Database = new ModelEventName('Database');
    public static Debug = new ModelEventName('Debug');
    public static DetachedVolume = new ModelEventName('DetachedVolume');
    public static Directory = new ModelEventName('Directory');
    public static DirectoryserviceConfig = new ModelEventName('DirectoryserviceConfig');
    public static DirectoryServices = new ModelEventName('DirectoryServices');
    public static Disk = new ModelEventName('Disk');
    public static DiskUsage = new ModelEventName('DiskUsage');
    public static DockerCollection = new ModelEventName('DockerCollection');
    public static DockerConfig = new ModelEventName('DockerConfig');
    public static DockerContainer = new ModelEventName('DockerContainer');
    public static DockerContainerBridge = new ModelEventName('DockerContainerBridge');
    public static DockerContainerCreator = new ModelEventName('DockerContainerCreator');
    public static DockerContainerLogs = new ModelEventName('DockerContainerLogs');
    public static DockerContainerSection = new ModelEventName('DockerContainerSection');
    public static DockerHost = new ModelEventName('DockerHost');
    public static DockerImage = new ModelEventName('DockerImage');
    public static DockerImageReadme = new ModelEventName('DockerImageReadme');
    public static DockerImagePull = new ModelEventName('DockerImagePull');
    public static DockerNetwork = new ModelEventName('DockerNetwork');
    public static EncryptedVolumeActions = new ModelEventName('EncryptedVolumeActions');
    public static EncryptedVolumeImporter = new ModelEventName('EncryptedVolumeImporter');
    public static FreenasCredentials = new ModelEventName('FreenasCredentials');
    public static Group = new ModelEventName('Group');
    public static ImportableDisk = new ModelEventName('ImportableDisk');
    public static Ipmi = new ModelEventName('Ipmi');
    public static KerberosKeytab = new ModelEventName('KerberosKeytab');
    public static KerberosRealm = new ModelEventName('KerberosRealm');
    public static Mail = new ModelEventName('Mail');
    public static NetworkConfig = new ModelEventName('NetworkConfig');
    public static NetworkHost = new ModelEventName('NetworkHost');
    public static NetworkInterface = new ModelEventName('NetworkInterface');
    public static NetworkInterfaceBridgeProperties = new ModelEventName('NetworkInterfaceBridgeProperties');
    public static NetworkInterfaceLaggProperties = new ModelEventName('NetworkInterfaceLaggProperties');
    public static NetworkInterfaceVlanProperties = new ModelEventName('NetworkInterfaceVlanProperties');
    public static NetworkRoute = new ModelEventName('NetworkRoute');
    public static NtpServer = new ModelEventName('NtpServer');
    public static Peer = new ModelEventName('Peer');
    public static Permissions = new ModelEventName('Permissions');
    public static Replication = new ModelEventName('Replication');
    public static ReplicationOptions = new ModelEventName('ReplicationOptions');
    public static RsyncdModule = new ModelEventName('RsyncdModule');
    public static Section = new ModelEventName('Section');
    public static SectionSettings = new ModelEventName('SectionSettings');
    public static Service = new ModelEventName('Service');
    public static ServiceDc = new ModelEventName('ServiceDc');
    public static ServiceDyndns = new ModelEventName('ServiceDyndns');
    public static ServicesCategory = new ModelEventName('ServicesCategory');
    public static ServiceUps = new ModelEventName('ServiceUps');
    public static Share = new ModelEventName('Share');
    public static SshCredentials = new ModelEventName('SshCredentials');
    public static SupportCategory = new ModelEventName('SupportCategory');
    public static SupportTicket = new ModelEventName('SupportTicket');
    public static SystemAdvanced = new ModelEventName('SystemAdvanced');
    public static SystemGeneral = new ModelEventName('SystemGeneral');
    public static SystemSection = new ModelEventName('SystemSection');
    public static SystemTime = new ModelEventName('SystemTime');
    public static SystemUi = new ModelEventName('SystemUi');
    public static Task = new ModelEventName('Task');
    public static Tunable = new ModelEventName('Tunable');
    public static Update = new ModelEventName('Update');
    public static User = new ModelEventName('User');
    public static Vm = new ModelEventName('Vm');
    public static VmConfig = new ModelEventName('VmConfig');
    public static VmDevice = new ModelEventName('VmDevice');
    public static VmReadme = new ModelEventName('VmReadme');
    public static VmVolume = new ModelEventName('VmVolume');
    public static VmwareCredentials = new ModelEventName('VmwareCredentials');
    public static VmwareDataset = new ModelEventName('VmwareDataset');
    public static VmwareDatastore = new ModelEventName('VmwareDatastore');
    public static Volume = new ModelEventName('Volume');
    public static VolumeDataset = new ModelEventName('VolumeDataset');
    public static VolumeDatasetProperties = new ModelEventName('VolumeDatasetProperties');
    public static VolumeDatasetPropertyAtime = new ModelEventName('VolumeDatasetPropertyAtime');
    public static VolumeDatasetPropertyCasesensitivity = new ModelEventName('VolumeDatasetPropertyCasesensitivity');
    public static VolumeDatasetPropertyCompression = new ModelEventName('VolumeDatasetPropertyCompression');
    public static VolumeDatasetPropertyDedup = new ModelEventName('VolumeDatasetPropertyDedup');
    public static VolumeDatasetPropertyQuota = new ModelEventName('VolumeDatasetPropertyQuota');
    public static VolumeDatasetPropertyRefquota = new ModelEventName('VolumeDatasetPropertyRefquota');
    public static VolumeDatasetPropertyRefreservation = new ModelEventName('VolumeDatasetPropertyRefreservation');
    public static VolumeDatasetPropertyReservation = new ModelEventName('VolumeDatasetPropertyReservation');
    public static VolumeDatasetPropertyVolblocksize = new ModelEventName('VolumeDatasetPropertyVolblocksize');
    public static VolumeImporter = new ModelEventName('VolumeImporter');
    public static VolumeSnapshot = new ModelEventName('VolumeSnapshot');
    public static VolumeVdevRecommendations = new ModelEventName('VolumeVdevRecommendations');
    public static ZfsTopology = new ModelEventName('ZfsTopology');
    public static ZfsVdev = new ModelEventName('ZfsVdev');

    public listChange: string;
    public contentChange: string;
    public add: Function;
    public remove: Function;
    public change: Function;

    private constructor(modelName: string) {
        this.listChange = modelName + 'ListChange';
        this.contentChange = modelName + 'ContentChange';
        this.add = (id) => modelName + 'Add.' + id;
        this.remove = (id) => modelName + 'Remove.' + id;
        this.change = (id) => modelName + '.' + id;
    }
}
